library(shiny); runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
# Define UI
ui <- fluidPage(theme = shinytheme("yeti"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"DBS-Projekt",
tabPanel("Plot",
sidebarPanel(
tags$h3("Select your data"),
selectInput("select", label = h3("Select Table"),
choices = list("emission" = 1,
"gdp" = 2,
"population growth" = 3,
"population total" = 4,
"energy" = 5,
"country" = 6),
selected = 6
),
radioButtons(
inputId = "test",
label = h4("Select Table"),
choices = list("emission" = 1,
"gdp" = 2,
"population growth" = 3,
"population total" = 4,
"energy" = 5,
"country" = 6)
)
#textInput("txt1", "Given Name:", ""),
#textInput("txt2", "Surname:", ""),
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
) # Navbar 1, tabPanel
#tabPanel("Navbar 2", "This panel is intentionally left blank"),
#("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
#COnnect to the Database
mydb = dbConnect(MySQL(),
user='root',
password='5142',
dbname='dbs_project',
host='127.0.0.1')
dbListTables(mydb)
country <- dbGetQuery(mydb, 'SELECT * FROM country')
energy <- dbGetQuery(mydb, 'SELECT * FROM energy')
dbDisconnect( dbListConnections( dbDriver( drv = "MySQL"))[[1]])
choices <- country$code
names(choices) <- country$name
choices# Define UI
selectizeInput(inputId = 'inSelect',
label = "Laender",
choices = country$name,
multiple = TRUE,
options = list(maxItems = 4,
placeholder = 'waehle bis 4 Laender')
)
choices <- country$code
choices <- country$code
choices
names(choices) <- country$name
choices
selectizeInput(inputId = 'inSelect',
label = "Laender",
choices = country$name,
multiple = TRUE,
options = list(maxItems = 4,
placeholder = 'waehle bis 4 Laender')
)
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
output$txtout <- renderText({
paste(input$inSelect )
})
output$text <- renderPrint({
paste(input$inSelect)
})
#  output$text <- renderPrint({
#    req(input$inSelect)
#    country$code[match(input$inSelect,country$name)]
#  })
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('shiny_app.r')
source('~/.active-rstudio-document', echo=TRUE)
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('shiny_app.r')
runApp('shiny_app.r')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c("RCurl", "randomForest", "data.table"))
source('~/.active-rstudio-document', echo=TRUE)
if (input$submitbutton>0) {
isolate(datasetInput())
}
install.packages("randomForest")
source('~/.active-rstudio-document', echo=TRUE)
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
Sys.setenv(LANG = "en")
Sys.setenv(LANG = "en")
Sys.setenv(LANG = "en")
runApp('shiny_app.r')
runApp('shiny_app.r')
#list all connections with a database:
dbListConnections( dbDriver( drv = "MySQL"))
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
source('C:/Users/Moritz/Desktop/DBS-projekt-git/DBS-Projekt/source/shiny_app.r', echo=TRUE)
#list all connections with a database:
dbListConnections( dbDriver( drv = "MySQL"))
source('C:/Users/Moritz/Desktop/DBS-projekt-git/DBS-Projekt/source/shiny_app.r', echo=TRUE)
#list all connections with a database:
dbListConnections( dbDriver( drv = "MySQL"))
source('C:/Users/Moritz/Desktop/DBS-projekt-git/DBS-Projekt/source/shiny_app.r', echo=TRUE)
#list all connections with a database:
dbListConnections( dbDriver( drv = "MySQL"))
runApp('shiny_app.r')
#list all connections with a database:
dbListConnections( dbDriver( drv = "MySQL"))
#COnnect to the Database
mydb = dbConnect(MySQL(),
user='root',
password='5142',
dbname='dbs_project',
host='127.0.0.1')
dbListTables(mydb)
runApp('shiny_app.r')
tables <- c(
country <- dbGetQuery(mydb, 'SELECT * FROM country'),
emission  <- dbGetQuery(mydb, 'SELECT * FROM co2_emission'),
gdp  <- dbGetQuery(mydb, 'SELECT * FROM gdp'),
pop_t  <- dbGetQuery(mydb, 'SELECT * FROM population_total'),
pop_g  <- dbGetQuery(mydb, 'SELECT * FROM population_growth'),
energy  <- dbGetQuery(mydb, 'SELECT * FROM energy')
)
tables
View(country)
dbListTables(mydb)
tables <- c(
country <- dbGetQuery(mydb, 'SELECT * FROM country'),
emission  <- dbGetQuery(mydb, 'SELECT * FROM co2_emission'),
gdp  <- dbGetQuery(mydb, 'SELECT * FROM gdp'),
pop_t  <- dbGetQuery(mydb, 'SELECT * FROM population_total'),
pop_g  <- dbGetQuery(mydb, 'SELECT * FROM population_growth'),
energy  <- dbGetQuery(mydb, 'SELECT * FROM energy')
)
#COnnect to the Database
mydb = dbConnect(MySQL(),
user='root',
password='5142',
dbname='dbs_project',
host='127.0.0.1')
dbListTables(mydb)
tables <- c(
country <- dbGetQuery(mydb, 'SELECT * FROM country'),
emission  <- dbGetQuery(mydb, 'SELECT * FROM co2_emission'),
gdp  <- dbGetQuery(mydb, 'SELECT * FROM gdp'),
pop_t  <- dbGetQuery(mydb, 'SELECT * FROM population_total'),
pop_g  <- dbGetQuery(mydb, 'SELECT * FROM population_growth'),
energy  <- dbGetQuery(mydb, 'SELECT * FROM energy')
)
tables
lapply( dbListConnections( dbDriver( drv = "MySQL")), dbDisconnect)
countryN <- country$code
tables
View(tables)
#COnnect to the Database
mydb = dbConnect(MySQL(),
user='root',
password='5142',
dbname='dbs_project',
host='127.0.0.1')
dbListTables(mydb)
tables <- list(
country <- dbGetQuery(mydb, 'SELECT * FROM country'),
emission  <- dbGetQuery(mydb, 'SELECT * FROM co2_emission'),
gdp  <- dbGetQuery(mydb, 'SELECT * FROM gdp'),
pop_t  <- dbGetQuery(mydb, 'SELECT * FROM population_total'),
pop_g  <- dbGetQuery(mydb, 'SELECT * FROM population_growth'),
energy  <- dbGetQuery(mydb, 'SELECT * FROM energy')
)
tables
tables[1]
tables[3]
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
sd
kill
stop
end
